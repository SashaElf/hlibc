hlibc

DESCRIPTION:
------------

	hlibc is an experimental libc targeted at the linux kernel's syscall
	ABI. It is a standalone libc which supports the i386, x86_64, arm and
	aarch64 architectures. 

	hlibc has specific compiler support for gcc and clang.


BUILDING:
---------

	hlibc contains a shell wrapper for gcc called `gcc-wrap`. This allows it
	to be easily installed and used from your home directory without the 
	need for root privilege.

		git clone https://git.hlibc.xyz/lab/hlibc
		cd hlibc 
		./configure --prefix=/home/$USER/buildarea 
		make 
		make install

	Test the installation:

		/home/$USER/buildarea/bin/gcc-wrap hello.c


	hlibc only supports static linking at this time.


	include/
		Architecture agnostic headers for /usr/include

	src/
		The libc source code

	arch/
		Architecture specific headers.

	crt/
		Crt stuffs.

	hbox/
		A small busybox like set of POSIX utilities.

	tests/
		A set of C run time tests.


AUTOMATIC TESTING:
------------------
	
	Use the following instructions to retrieve, build and run hlibc 
	and the hlibc test suite.

		git clone https://git.hlibc.xyz/lab/hlibc
		cd hlibc
		make gcctest

	Or to test with clang:

		git clone https://git.hlibc.xyz/lab/hlibc
		cd hlibc
		make clangtest
		

	If all ran successfully there should be no significant errors and
	a confirmation notice containing the results of the test suite 
	will be printed to screen looking something like this:

		==========COMPILING TESTS ===================================
		=============================================================
		==========TEST RESULT START==================================
		`atoll-small' compared equal to its control method
		`strtoll-driver' compared equal to its control method
		`malloc-huge' compared equal to its control method
		`ctype' compared equal to its control method
		`malloc-unique-pointer' compared equal to its control method
		`getline-driver' compared equal to its control method
		`atoi' compared equal to its control method
		 ...

	If any compiler or linker errors occur within this report then the libc
	has changed and likely regressed or otherwise lost a functionality.

	If you wish to add a new test to the test suite simply put the program
	under tests/ and it will be compiled along with the other tests. To
	have the test automatically ran with the hlibc test suite then add the
	title of its binary to BASIC_TYPE= at the top of tools/build.sh. This
	method is for tests that produce output as stdout and are then compared
	with the output of the same test compiled against the host. If the test
	does not use stdout or is unsuitable for running against the host as a
	control medium then it must be scripted into ./tools/build.sh by hand.

	Two duplicate test directories are created by the test suite, The
	duplicate test directory is compiled against the default host libc
	and used as control medium to diff the output of the same tests
	compiled against hlibc:

		control/*.c --> links to tests/*.c
		hbox-control/*.c  --> links to hbox/*.c


REVISION CONTROL:
-----------------

	https://git.hlibc.xyz/lab/hlibc


CONTACT:
--------

	cm0graff@gmail.com


IRC:
----

	#hlibc on irc.freenode.net


RELENG:
-------

	A release can be engineered by running:

		make release RELENG="hlibc-0.1x" \
		RELENG_MIR="http://mirror/" \
		RELENG_DIR="www/" \
		RELENG_SSH="user@host"


COPYING:
--------

	Please see the attached LICENSE file for the list of contributors and
	copying detsils.


RELEASES:
---------

	http://hlibc.xyz/hlibc-0.1a.tar.gz

	http://hlibc.xyz/hlibc-0.1b.tar.gz

	http://hlibc.xyz/hlibc-0.1c.tar.gz

	http://hlibc.xyz/hlibc-0.1d.tar.gz

	http://hlibc.xyz/hlibc-0.1e.tar.gz

