#---------------------------------------------------------------
# Configuration.

variables:
  REPO: hlibc/build   # (public) Docker image to use for testing
  AVER: "3.7"         # Alpine version (must exist on Docker Hub)
  DVER: "8"           # Debian version (must exist on Docker Hub)
  TB32:  "i386.zv.io" # unused; runs on Host (Docker)
  TB64: "    c.zv.io" #         runs on Host (native)
  TBA7:   "arm.zv.io" #         runs on Host (native)
  TBA8:    "v8.zv.io" #         runs on Host (native)
  NODe:   "nod.zv.io" #         runs on Host (native)
  USER: "robot"       # should be unprivileged dummy account

#build:
#  cache:
#    paths:
#      - posix-utils/

#---------------------------------------------------------------
# 32-bit Alpine (Docker).

TB32-alpine-gcc:
  image: $REPO:a37g32
  script:
  - apk update && apk add make musl-dev gcc 
  - make gcctest

TB32-alpine-clang:
  image: $REPO:a37c32
  script:
  - apk update && apk add make musl-dev clang binutils
  - make clangtest

#---------------------------------------------------------------
# 64-bit Alpine (Docker).

TB64-alpine-gcc:
  image: $REPO:a37g64
  script:
  - apk update && apk add make musl-dev gcc 
  - make gcctest

TB64-alpine-clang:
  image: $REPO:a37c64
  script:
  - apk update && apk add make musl-dev clang binutils
  - make clangtest

#---------------------------------------------------------------
# 32-bit Debian (Docker).

TB32-debian-gcc:
  image: $REPO:d80g32
  script:
  - apt-get update && apt-get -y install make gcc
  - make gcctest

TB32-debian-clang:
  image: $REPO:d80c32
  script:
  - apt-get update && apt-get -y install make clang binutils
  - make clangtest

#---------------------------------------------------------------
# 64-bit Debian (Docker).

TB64-debian-gcc:
  image: $REPO:d80g64
  script:
  - apt-get update && apt-get -y install make gcc
  - make gcctest

TB64-debian-clang:
  image: $REPO:d80c64
  script:
  - apt-get update && apt-get -y install make clang binutils
  - make clangtest

#---------------------------------------------------------------
# ARMv7 (Native).

# Copy and test on *remote* ARMv7 machine
TBA7-gcc:
  image: alpine:$AVER # Host environment
  script:
  - apk update && apk add bash openssh-client rsync
  - mkdir ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent)
  - bash -c 'ssh-add <(echo "$ID_RSA")'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - rsync -r . $USER@$TBA7:/home/$USER/$CI_COMMIT_SHA
  - ssh $USER@$TBA7 "cd /home/$USER/$CI_COMMIT_SHA && make gcctest && cd - && rm -fr /home/$USER/$CI_COMMIT_SHA"

TBA7-clang:
  image: alpine:$AVER # Host environment
  script:
  - apk update && apk add bash openssh-client rsync
  - mkdir ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent)
  - bash -c 'ssh-add <(echo "$ID_RSA")'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - rsync -r . $USER@$TBA7:/home/$USER/$CI_COMMIT_SHA
  - ssh $USER@$TBA7 "cd /home/$USER/$CI_COMMIT_SHA && make clangtest && cd - && rm -fr /home/$USER/$CI_COMMIT_SHA"

#---------------------------------------------------------------
# ARMv8 (Native).

# Copy and test on *remote* ARMv8 machine
TBA8-gcc:
  image: alpine:$AVER # Host environment
  script:
  - apk update && apk add bash openssh-client rsync
  - mkdir ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent)
  - bash -c 'ssh-add <(echo "$ID_RSA")'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - rsync -r . $USER@$TBA8:/home/$USER/$CI_COMMIT_SHA
  - ssh $USER@$TBA8 "cd /home/$USER/$CI_COMMIT_SHA && make gcctest && cd - && rm -fr /home/$USER/$CI_COMMIT_SHA"

TBA8-clang:
  image: alpine:$AVER # Host environment
  script:
  - apk update && apk add bash openssh-client rsync
  - mkdir ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent)
  - bash -c 'ssh-add <(echo "$ID_RSA")'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - rsync -r . $USER@$TBA8:/home/$USER/$CI_COMMIT_SHA
  - ssh $USER@$TBA8 "cd /home/$USER/$CI_COMMIT_SHA && make clangtest && cd - && rm -fr /home/$USER/$CI_COMMIT_SHA"

#---------------------------------------------------------------
# x86_64 [EPYC] (Native).

# Copy and test on *remote* x86_64 machine
TB64-gcc:
  image: alpine:$AVER # Host environment
  script:
  - apk update && apk add bash openssh-client rsync
  - mkdir ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent)
  - bash -c 'ssh-add <(echo "$ID_RSA")'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - rsync -r . $USER@$TB64:/home/$USER/$CI_COMMIT_SHA
  - ssh $USER@$TB64 "cd /home/$USER/$CI_COMMIT_SHA && make gcctest && cd - && rm -fr /home/$USER/$CI_COMMIT_SHA"
  
TB64-clang:
  image: alpine:$AVER # Host environment
  script:
  - apk update && apk add bash openssh-client rsync
  - mkdir ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent)
  - bash -c 'ssh-add <(echo "$ID_RSA")'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - rsync -r . $USER@$TB64:/home/$USER/$CI_COMMIT_SHA
  - ssh $USER@$TB64 "cd /home/$USER/$CI_COMMIT_SHA && make clangtest && cd - && rm -fr /home/$USER/$CI_COMMIT_SHA"

#---------------------------------------------------------------
# 64-bit Nix (Emulated).

# Copy and test on *remote* NODe machine
NODe64-gcc:
  image: alpine:$AVER # Host environment
  script:
  - apk update && apk add bash openssh-client
  - mkdir ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent)
  - bash -c 'ssh-add <(echo "$ID_RSA")'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - echo $CI_COMIT_SHA
  - ssh $USER@$NODe $CI_COMMIT_SHA